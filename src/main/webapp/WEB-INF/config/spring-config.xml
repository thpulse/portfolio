<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/assets/**" location="/assets/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- ==============뷰리졸버에 대한 등록================================= -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	<!-- tiles인식을 위한 설정 -->
	<!-- 1. tiles설정파일을 등록 -->
	<beans:bean id="tilesConfigurer" 
					class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/config/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- 2. 기본 jsp파일을 직접 뷰로 작성하지않고 tiles설정을 보면서 뷰를 만들 수 있도록 -->
	<beans:bean id="tilesViewResolver" 
						class="org.springframework.web.servlet.view.UrlBasedViewResolver">
				<beans:property name="viewClass" 
						value="org.springframework.web.servlet.view.tiles2.TilesView"/>
				<beans:property name="order" value="1"/>
	</beans:bean>

	<!-- =====================db관련 작업============================== -->
	<beans:bean id="ds"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/myspring" />
		<beans:property name="resourceRef" value="true" />
	</beans:bean>
	<beans:bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="ds" />
	</beans:bean>

	<!-- ======================Mybatis등록========================= -->
	<beans:bean id="sqlSessionFactory" 
			class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>
		<beans:property name="configLocation"
			value="/WEB-INF/config/mybatis-config.xml"/>
	</beans:bean>
	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>	
	
	<!-- ======================어노테이션============================== -->
  <!-- <context:component-scan base-package="spring"/> -->
	<context:component-scan base-package="kitri" />
	<!-- =======================스케줄링 어노테이션======================== -->
<task:annotation-driven/>
	 
	<!-- JPA By 수정 -->
	<!-- ======================JPA설정============================== -->
	<beans:bean id="transactionManager" 
					class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory"/>	
	</beans:bean>
	<beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="ds" />
		<beans:property name="packagesToScan" value="kitri.performinfo.jpa"/>
		<beans:property name="jpaVendorAdapter">
			<beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</beans:property>
	</beans:bean>
	<jpa:repositories base-package="kitri.performinfo.jpa" 
			entity-manager-factory-ref="entityManagerFactory"/>
	
</beans:beans>
